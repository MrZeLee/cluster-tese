apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: qbittorrent-ingress
  namespace: media-server
  labels:
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
    - web
  routes:
    - match: Host(`qbittorrent.{{ .Values.cloudflare_zone }}`)
      kind: Rule
      services:
        - name: qbittorrent-webui
          port: 8080
  tls:
    domains:
    - main: {{ .Values.cloudflare_zone }}
      sans:
      - qbittorrent.{{ .Values.cloudflare_zone }}
    secretName: {{ .Values.cloudflare_zone_hyphen }}-tls

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: sonarr-ingress
  namespace: media-server
  labels:
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
    - web
  routes:
    - match: Host(`sonarr.{{ .Values.cloudflare_zone }}`)
      kind: Rule
      services:
        - name: sonarr-webui
          port: 8989
  tls:
    domains:
    - main: {{ .Values.cloudflare_zone }}
      sans:
      - sonarr.{{ .Values.cloudflare_zone }}
    secretName: {{ .Values.cloudflare_zone_hyphen }}-tls

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jackett-ingress
  namespace: media-server
  labels:
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
    - web
  routes:
    - match: Host(`jackett.{{ .Values.cloudflare_zone }}`)
      kind: Rule
      services:
        - name: jackett-webui
          port: 9117
  tls:
    domains:
    - main: {{ .Values.cloudflare_zone }}
      sans:
      - jackett.{{ .Values.cloudflare_zone }}
    secretName: {{ .Values.cloudflare_zone_hyphen }}-tls